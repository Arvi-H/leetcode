# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
        
class Solution(object):
    def mergeNodes(self, head):
        curr = head 
        total = 0
        mylist = []
        
        while curr: 
            if curr.val == 0:
                if total > 0:
                    mylist.append(total)    
                
                total = 0
                    
            total += curr.val  
            curr = curr.next
            
        temp = ListNode(mylist[0])
        test = temp 
        
        for i in range(1, len(mylist)):
            test.next = ListNode(mylist[i])
            test = test.next 
         
        return temp
     
# Example usage:
# Construct the linked list: 1 -> 2 -> 0 -> 3 -> 4 -> 5 -> 0 -> 6 -> 7 -> 0 -> 0 -> 8 -> 9 -> 0
head = ListNode(1, ListNode(2, ListNode(0, ListNode(3, ListNode(4, ListNode(5, ListNode(0, ListNode(6, ListNode(7, ListNode(0, ListNode(0, ListNode(8, ListNode(9, ListNode(0))))))))))))))
result = Solution().mergeNodes(head)
 